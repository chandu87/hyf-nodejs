{"version":3,"sources":["../src/ContactList.js"],"names":["writeFile","util","promisify","fs","readFile","Contact","constructor","obj","name","age","id","addPhone","number","phoneNumber","call","console","log","birthday","ContactList","filename","list","load","addContact","contact","push","save","deleteContact","contactId","ids","map","item","deleteId","indexOf","splice","path","resolve","__dirname","JSON","stringify","then","readFilePromise","fileString","parse","contactObj","Promise"],"mappings":"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","file":"ContactList.js","sourcesContent":["import fs from \"fs\";\nimport util from \"util\";\nimport path from \"path\";\n\nconst writeFile = util.promisify(fs.writeFile);\nconst readFile = util.promisify(fs.readFile);\n\nexport class Contact {\n    constructor(obj) {\n        this.name = obj.name;\n\t\tthis.age = obj.age;\n\t\tthis.id = obj.id;\n\t};\n\t\n    addPhone(number) {\n\n        return this.phoneNumber = number;\n    }\n     call() {\n\n         if (this.phoneNumber)\n             console.log(\"Calling \" + this.name + \" at \" + this.phoneNumber);\n         else\n             console.log(this.name + \" has no phone number saved.\");\n\n     }\n     birthday() {\n\n         console.log(\"Wishing \" + this.name + \" a happy \" + (this.age+1) + \"th birthday!\");\n\n     }\n};\n\nexport class ContactList {\n\tconstructor(filename){\n\t\tthis.list = [];\n\t\tthis.filename = filename;\n\t\tthis.load();\n\t}\n\n\taddContact(contact){\n\t\tif(contact instanceof Contact) {\n\t\t\tthis.list.push(contact);\n\t\t\tconsole.log(\"this.list\", this.list);\n\t\t\treturn this.save(this.list);\n\t\t}\n\t}\n\tdeleteContact(contactId){\n\t\tconsole.log(contactId);\n\t\tconsole.log(this.list);\n\t\tconst ids= this.list.map(item =>{ return item.id});\n\t\tconsole.log(ids);\n\t\tconst deleteId = ids.indexOf(contactId);\n\t\tconsole.log(deleteId);\n\t\tif(deleteId !== -1){\n\t\tthis.list.splice(deleteId,1);\n\t\tconsole.log(\"------- List after delete -----------\");\n\t\tconsole.log(this.list);\t\n\t}else{\n\t\tconsole.log(\"Item with ID not found\");\n\t}\n//\t\tconsole.log(this.list.indexOf());\n\t\t// console.log(this.list.slice(0,contactId-1));\n\t\t// console.log(this.list.slice(contactId+1,this.list.length));\n\t}\n\n\tsave(list){\n\t\treturn writeFile(path.resolve(__dirname, this.filename), JSON.stringify(list), \"utf8\")\n\t\t.then(() => {\n\t\t\treturn list;\t\n\t\t});\n\t}\n\n\tload(){\n\t\tconst readFilePromise = readFile(path.resolve(__dirname, this.filename), \"utf8\");\n\n\t\treturn readFilePromise\n\t\t.then(fileString => {\n\t\t\tthis.list = JSON.parse(fileString)\n\t\t\t.map(contactObj => new Contact(contactObj));\n\n\t\t\treturn Promise.resolve(null);\n\t\t});\n\t\t// return new Promise((resolve, reject) => {\n\t\t// \treadFilePromise\n\t\t// \t.then(fileString => {\n\t\t// \t\tthis.list = JSON.parse(fileString)\n\t\t// \t\t.map(contactObj => new Contact(contactObj));\n\t\t\t\t\n\t\t// \t\tresolve(null);\n\t\t// \t});\n\t\t// });\n\t}\n};"]}